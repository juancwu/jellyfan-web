// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package component

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

const (
	UPLOAD_FORM_FILE_NAME = "filename"
	UPLOAD_FORM_FILE_BLOB = "file"
)

func FileUploadForm() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"fileUploadForm\" class=\"space-y-4\" hx-post=\"/api/v1/upload\" hx-encoding=\"multipart/form-data\" _=\"on htmx:xhr:progress(loaded, total) set #fileprogress.value to (loaded/total)*100\n        on htmx:afterOnLoad toggle @disabled on #fileUploadSubmit\n        on htmx:beforeRequest toggle @disabled on #fileUploadSubmit\n        on htmx:afterOnLoad toggle @disabled on #file\n        on htmx:beforeRequest toggle @disabled on #file\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = TextInput(TextInputProps{
			Type:        "text",
			Name:        UPLOAD_FORM_FILE_NAME,
			Id:          "customFileName",
			Description: "This will be used to overwrite the original file name.",
			Placeholder: "Custom file name...",
			Disabled:    true,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = FileInput(FileInputProps{
			Name:        UPLOAD_FORM_FILE_BLOB,
			Id:          "file",
			Label:       "Select a file",
			Required:    true,
			Accept:      "video/mp4,.mkv,video/webm,application/x-bittorrent",
			Description: "This is the file you want to store in the service.",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Button(ButtonProps{Text: "Submit", Type: "submit", Id: "fileUploadSubmit"}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<progress class=\"block\" id=\"fileprogress\" value=\"0\" max=\"100\"></progress></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
